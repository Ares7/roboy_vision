<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="shortcut__layer_8c" kind="file" language="C++">
    <compoundname>shortcut_layer.c</compoundname>
    <includes refid="shortcut__layer_8h" local="yes">shortcut_layer.h</includes>
    <includes refid="cuda_8h" local="yes">cuda.h</includes>
    <includes refid="blas_8h" local="yes">blas.h</includes>
    <includes refid="activations_8h" local="yes">activations.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">assert.h</includes>
    <incdepgraph>
      <node id="1687">
        <label>box.h</label>
        <link refid="box_8h_source"/>
        <childnode refid="1678" relation="include">
        </childnode>
      </node>
      <node id="1695">
        <label>assert.h</label>
      </node>
      <node id="1685">
        <label>float.h</label>
      </node>
      <node id="1679">
        <label>stdlib.h</label>
      </node>
      <node id="1692">
        <label>cuda.h</label>
        <link refid="cuda_8h_source"/>
        <childnode refid="1678" relation="include">
        </childnode>
      </node>
      <node id="1688">
        <label>data.h</label>
        <link refid="data_8h_source"/>
        <childnode refid="1682" relation="include">
        </childnode>
        <childnode refid="1678" relation="include">
        </childnode>
        <childnode refid="1689" relation="include">
        </childnode>
        <childnode refid="1690" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1691" relation="include">
        </childnode>
      </node>
      <node id="1683">
        <label>network.h</label>
        <link refid="network_8h_source"/>
        <childnode refid="1678" relation="include">
        </childnode>
        <childnode refid="1684" relation="include">
        </childnode>
        <childnode refid="1677" relation="include">
        </childnode>
        <childnode refid="1688" relation="include">
        </childnode>
        <childnode refid="1691" relation="include">
        </childnode>
      </node>
      <node id="1694">
        <label>activations.h</label>
        <link refid="activations_8h_source"/>
        <childnode refid="1678" relation="include">
        </childnode>
        <childnode refid="1692" relation="include">
        </childnode>
        <childnode refid="1686" relation="include">
        </childnode>
      </node>
      <node id="1690">
        <label>list.h</label>
        <link refid="list_8h_source"/>
        <childnode refid="1678" relation="include">
        </childnode>
      </node>
      <node id="1689">
        <label>matrix.h</label>
        <link refid="matrix_8h_source"/>
        <childnode refid="1678" relation="include">
        </childnode>
      </node>
      <node id="1678">
        <label>darknet.h</label>
        <link refid="darknet_8h_source"/>
        <childnode refid="1679" relation="include">
        </childnode>
        <childnode refid="1680" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1682" relation="include">
        </childnode>
      </node>
      <node id="1677">
        <label>layer.h</label>
        <link refid="layer_8h_source"/>
        <childnode refid="1678" relation="include">
        </childnode>
      </node>
      <node id="1682">
        <label>pthread.h</label>
      </node>
      <node id="1684">
        <label>image.h</label>
        <link refid="image_8h_source"/>
        <childnode refid="1679" relation="include">
        </childnode>
        <childnode refid="1680" relation="include">
        </childnode>
        <childnode refid="1685" relation="include">
        </childnode>
        <childnode refid="1681" relation="include">
        </childnode>
        <childnode refid="1686" relation="include">
        </childnode>
        <childnode refid="1687" relation="include">
        </childnode>
        <childnode refid="1678" relation="include">
        </childnode>
      </node>
      <node id="1681">
        <label>string.h</label>
      </node>
      <node id="1693">
        <label>blas.h</label>
        <link refid="blas_8h_source"/>
        <childnode refid="1678" relation="include">
        </childnode>
      </node>
      <node id="1686">
        <label>math.h</label>
      </node>
      <node id="1691">
        <label>tree.h</label>
        <link refid="tree_8h_source"/>
        <childnode refid="1678" relation="include">
        </childnode>
      </node>
      <node id="1675">
        <label>/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/shortcut_layer.c</label>
        <link refid="shortcut_layer.c"/>
        <childnode refid="1676" relation="include">
        </childnode>
        <childnode refid="1692" relation="include">
        </childnode>
        <childnode refid="1693" relation="include">
        </childnode>
        <childnode refid="1694" relation="include">
        </childnode>
        <childnode refid="1680" relation="include">
        </childnode>
        <childnode refid="1695" relation="include">
        </childnode>
      </node>
      <node id="1676">
        <label>shortcut_layer.h</label>
        <link refid="shortcut__layer_8h_source"/>
        <childnode refid="1677" relation="include">
        </childnode>
        <childnode refid="1683" relation="include">
        </childnode>
      </node>
      <node id="1680">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="shortcut__layer_8c_1a3aca2328726266a92a5ef31a97bf818c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlayer" kindref="compound">layer</ref></type>
        <definition>layer make_shortcut_layer</definition>
        <argsstring>(int batch, int index, int w, int h, int c, int w2, int h2, int c2)</argsstring>
        <name>make_shortcut_layer</name>
        <param>
          <type>int</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/shortcut_layer.c" line="9" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/shortcut_layer.c" bodystart="9" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="shortcut__layer_8c_1ad7c077313dbf415d2a7147af734b2596" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void forward_shortcut_layer</definition>
        <argsstring>(const layer l, network net)</argsstring>
        <name>forward_shortcut_layer</name>
        <param>
          <type>const <ref refid="structlayer" kindref="compound">layer</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="structnetwork" kindref="compound">network</ref></type>
          <declname>net</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/shortcut_layer.c" line="41" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/shortcut_layer.c" bodystart="41" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="shortcut__layer_8c_1a73cebc83b7e7173a174f16df4c90383c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void backward_shortcut_layer</definition>
        <argsstring>(const layer l, network net)</argsstring>
        <name>backward_shortcut_layer</name>
        <param>
          <type>const <ref refid="structlayer" kindref="compound">layer</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="structnetwork" kindref="compound">network</ref></type>
          <declname>net</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/shortcut_layer.c" line="48" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/shortcut_layer.c" bodystart="48" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;shortcut_layer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cuda.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;blas.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;activations.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><ref refid="structlayer" kindref="compound">layer</ref><sp/>make_shortcut_layer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,</highlight><highlight class="stringliteral">&quot;Shortcut<sp/>Layer:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>index);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlayer" kindref="compound">layer</ref><sp/>l<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>l.type<sp/>=<sp/>SHORTCUT;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>l.batch<sp/>=<sp/>batch;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>l.w<sp/>=<sp/>w2;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>l.h<sp/>=<sp/>h2;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>l.c<sp/>=<sp/>c2;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>l.out_w<sp/>=<sp/>w;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>l.out_h<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>l.out_c<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>l.outputs<sp/>=<sp/>w*h*c;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>l.inputs<sp/>=<sp/>l.outputs;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>l.index<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>l.delta<sp/>=<sp/><sp/>calloc(l.outputs*batch,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>l.output<sp/>=<sp/>calloc(l.outputs*batch,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">));;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>l.forward<sp/>=<sp/>forward_shortcut_layer;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>l.backward<sp/>=<sp/>backward_shortcut_layer;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>l.forward_gpu<sp/>=<sp/>forward_shortcut_layer_gpu;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>l.backward_gpu<sp/>=<sp/>backward_shortcut_layer_gpu;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>l.delta_gpu<sp/>=<sp/><sp/>cuda_make_array(l.delta,<sp/>l.outputs*batch);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>l.output_gpu<sp/>=<sp/>cuda_make_array(l.output,<sp/>l.outputs*batch);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward_shortcut_layer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlayer" kindref="compound">layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net)</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>copy_cpu(l.outputs*l.batch,<sp/>net.input,<sp/>1,<sp/>l.output,<sp/>1);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>shortcut_cpu(l.batch,<sp/>l.w,<sp/>l.h,<sp/>l.c,<sp/>net.layers[l.index].output,<sp/>l.out_w,<sp/>l.out_h,<sp/>l.out_c,<sp/>l.output);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>activate_array(l.output,<sp/>l.outputs*l.batch,<sp/>l.activation);</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>backward_shortcut_layer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlayer" kindref="compound">layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net)</highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>gradient_array(l.output,<sp/>l.outputs*l.batch,<sp/>l.activation,<sp/>l.delta);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>axpy_cpu(l.outputs*l.batch,<sp/>1,<sp/>l.delta,<sp/>1,<sp/>net.delta,<sp/>1);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>shortcut_cpu(l.batch,<sp/>l.out_w,<sp/>l.out_h,<sp/>l.out_c,<sp/>l.delta,<sp/>l.w,<sp/>l.h,<sp/>l.c,<sp/>net.layers[l.index].delta);</highlight></codeline>
<codeline lineno="53"><highlight class="normal">}</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward_shortcut_layer_gpu(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlayer" kindref="compound">layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net)</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/>copy_gpu(l.outputs*l.batch,<sp/>net.input_gpu,<sp/>1,<sp/>l.output_gpu,<sp/>1);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>shortcut_gpu(l.batch,<sp/>l.w,<sp/>l.h,<sp/>l.c,<sp/>net.layers[l.index].output_gpu,<sp/>l.out_w,<sp/>l.out_h,<sp/>l.out_c,<sp/>l.output_gpu);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>activate_array_gpu(l.output_gpu,<sp/>l.outputs*l.batch,<sp/>l.activation);</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>backward_shortcut_layer_gpu(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlayer" kindref="compound">layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net)</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>gradient_array_gpu(l.output_gpu,<sp/>l.outputs*l.batch,<sp/>l.activation,<sp/>l.delta_gpu);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>axpy_gpu(l.outputs*l.batch,<sp/>1,<sp/>l.delta_gpu,<sp/>1,<sp/>net.delta_gpu,<sp/>1);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>shortcut_gpu(l.batch,<sp/>l.out_w,<sp/>l.out_h,<sp/>l.out_c,<sp/>l.delta_gpu,<sp/>l.w,<sp/>l.h,<sp/>l.c,<sp/>net.layers[l.index].delta_gpu);</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/shortcut_layer.c"/>
  </compounddef>
</doxygen>
