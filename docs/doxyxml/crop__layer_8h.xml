<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="crop__layer_8h" kind="file" language="C++">
    <compoundname>crop_layer.h</compoundname>
    <includes refid="image_8h" local="yes">image.h</includes>
    <includes refid="layer_8h" local="yes">layer.h</includes>
    <includes refid="network_8h" local="yes">network.h</includes>
    <includedby refid="crop__layer_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/crop_layer.c</includedby>
    <includedby refid="network_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/network.c</includedby>
    <includedby refid="parser_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/parser.c</includedby>
    <incdepgraph>
      <node id="679">
        <label>box.h</label>
        <link refid="box_8h_source"/>
        <childnode refid="680" relation="include">
        </childnode>
      </node>
      <node id="676">
        <label>float.h</label>
      </node>
      <node id="674">
        <label>stdlib.h</label>
      </node>
      <node id="684">
        <label>data.h</label>
        <link refid="data_8h_source"/>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="685" relation="include">
        </childnode>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
      </node>
      <node id="683">
        <label>network.h</label>
        <link refid="network_8h_source"/>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="687" relation="include">
        </childnode>
      </node>
      <node id="686">
        <label>list.h</label>
        <link refid="list_8h_source"/>
        <childnode refid="680" relation="include">
        </childnode>
      </node>
      <node id="685">
        <label>matrix.h</label>
        <link refid="matrix_8h_source"/>
        <childnode refid="680" relation="include">
        </childnode>
      </node>
      <node id="680">
        <label>darknet.h</label>
        <link refid="darknet_8h_source"/>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
      </node>
      <node id="682">
        <label>layer.h</label>
        <link refid="layer_8h_source"/>
        <childnode refid="680" relation="include">
        </childnode>
      </node>
      <node id="681">
        <label>pthread.h</label>
      </node>
      <node id="673">
        <label>image.h</label>
        <link refid="image_8h_source"/>
        <childnode refid="674" relation="include">
        </childnode>
        <childnode refid="675" relation="include">
        </childnode>
        <childnode refid="676" relation="include">
        </childnode>
        <childnode refid="677" relation="include">
        </childnode>
        <childnode refid="678" relation="include">
        </childnode>
        <childnode refid="679" relation="include">
        </childnode>
        <childnode refid="680" relation="include">
        </childnode>
      </node>
      <node id="677">
        <label>string.h</label>
      </node>
      <node id="678">
        <label>math.h</label>
      </node>
      <node id="687">
        <label>tree.h</label>
        <link refid="tree_8h_source"/>
        <childnode refid="680" relation="include">
        </childnode>
      </node>
      <node id="672">
        <label>/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/crop_layer.h</label>
        <link refid="crop_layer.h"/>
        <childnode refid="673" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
      </node>
      <node id="675">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="crop__layer_8h_1a425e27d714e5fc642fd2ac3a23eed138" prot="public" static="no">
        <type><ref refid="structlayer" kindref="compound">layer</ref></type>
        <definition>typedef layer crop_layer</definition>
        <argsstring></argsstring>
        <name>crop_layer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/crop_layer.h" line="8" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/crop_layer.h" bodystart="8" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="crop__layer_8h_1ac6f2c6a5e02e43850f58f270c54979ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structimage" kindref="compound">image</ref></type>
        <definition>image get_crop_image</definition>
        <argsstring>(crop_layer l)</argsstring>
        <name>get_crop_image</name>
        <param>
          <type><ref refid="structlayer" kindref="compound">crop_layer</ref></type>
          <declname>l</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/crop_layer.h" line="10" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/crop_layer.c" bodystart="5" bodyend="11"/>
      </memberdef>
      <memberdef kind="function" id="crop__layer_8h_1a5c4c012097250ab0c110ea62f77d2fbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlayer" kindref="compound">crop_layer</ref></type>
        <definition>crop_layer make_crop_layer</definition>
        <argsstring>(int batch, int h, int w, int c, int crop_height, int crop_width, int flip, float angle, float saturation, float exposure)</argsstring>
        <name>make_crop_layer</name>
        <param>
          <type>int</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>crop_height</declname>
        </param>
        <param>
          <type>int</type>
          <declname>crop_width</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flip</declname>
        </param>
        <param>
          <type>float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>float</type>
          <declname>saturation</declname>
        </param>
        <param>
          <type>float</type>
          <declname>exposure</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/crop_layer.h" line="11" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/crop_layer.c" bodystart="16" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="crop__layer_8h_1a3f6d911552bc14f5ab27fe81a6574899" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void forward_crop_layer</definition>
        <argsstring>(const crop_layer l, network net)</argsstring>
        <name>forward_crop_layer</name>
        <param>
          <type>const <ref refid="structlayer" kindref="compound">crop_layer</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="structnetwork" kindref="compound">network</ref></type>
          <declname>net</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/crop_layer.h" line="12" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/crop_layer.c" bodystart="67" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="crop__layer_8h_1a7ff2df8313ba1720524d0ea88bafb0d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void resize_crop_layer</definition>
        <argsstring>(layer *l, int w, int h)</argsstring>
        <name>resize_crop_layer</name>
        <param>
          <type><ref refid="structlayer" kindref="compound">layer</ref> *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/crop_layer.h" line="13" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/crop_layer.c" bodystart="48" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>CROP_LAYER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CROP_LAYER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;image.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;layer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structlayer" kindref="compound">layer</ref><sp/><ref refid="structlayer" kindref="compound">crop_layer</ref>;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="structimage" kindref="compound">image</ref><sp/>get_crop_image(<ref refid="structlayer" kindref="compound">crop_layer</ref><sp/>l);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><ref refid="structlayer" kindref="compound">crop_layer</ref><sp/>make_crop_layer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crop_height,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>crop_width,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flip,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>angle,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>saturation,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>exposure);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward_crop_layer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlayer" kindref="compound">crop_layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize_crop_layer(<ref refid="structlayer" kindref="compound">layer</ref><sp/>*l,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward_crop_layer_gpu(<ref refid="structlayer" kindref="compound">crop_layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/crop_layer.h"/>
  </compounddef>
</doxygen>
