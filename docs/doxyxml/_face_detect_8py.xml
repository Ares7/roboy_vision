<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_face_detect_8py" kind="file" language="Python">
    <compoundname>FaceDetect.py</compoundname>
    <innernamespace refid="namespace_face_detect">FaceDetect</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespace_face_detect" refkind="compound"><highlight class="stringliteral">&quot;&quot;&quot;@package<sp/>FaceDetect</highlight></codeline>
<codeline lineno="2"><highlight class="stringliteral">1.<sp/>Face<sp/>is<sp/>detected<sp/>using<sp/>Dlib<sp/>library</highlight></codeline>
<codeline lineno="3"><highlight class="stringliteral">2.<sp/>68<sp/>landmarks<sp/>are<sp/>located<sp/>on<sp/>the<sp/>face<sp/>and<sp/>circles<sp/>are<sp/>drawn<sp/>over<sp/>the<sp/>landmarks.</highlight></codeline>
<codeline lineno="4"><highlight class="stringliteral">3.<sp/>The<sp/>position(rect)<sp/>of<sp/>the<sp/>face<sp/>is<sp/>sent<sp/>to<sp/>the<sp/>main<sp/>process<sp/>throught<sp/>the<sp/>RectQueue.</highlight></codeline>
<codeline lineno="5"><highlight class="stringliteral">4.<sp/>Frame<sp/>queue<sp/>is<sp/>as<sp/>a<sp/>future<sp/>reference<sp/>to<sp/>send<sp/>data<sp/>to<sp/>the<sp/>main<sp/>process</highlight></codeline>
<codeline lineno="6"><highlight class="stringliteral">&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>imutils<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>face_utils</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>imutils</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>dlib</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cv2</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>RosMsgUtil</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal">StartDetection(FrameQueue,RectQueue):</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&quot;[INFO]<sp/>loading<sp/>facial<sp/>landmark<sp/>predictor...&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>detector<sp/>=<sp/>dlib.get_frontal_face_detector()</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>predictor<sp/>=<sp/>dlib.shape_predictor(</highlight><highlight class="stringliteral">&quot;models/dlib/shape_predictor_68_face_landmarks.dat&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#fourcc<sp/>=<sp/>cv2.VideoWriter_fourcc(*&apos;XVID&apos;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#outVideo<sp/>=<sp/>cv2.VideoWriter(&apos;outputMouth.mp4&apos;,fourcc,<sp/>20.0,<sp/>(400,225))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>vs<sp/>=<sp/>cv2.VideoCapture(0)</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>counter<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>counter&lt;10:</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;&quot;</highlight></codeline>
<codeline lineno="26"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grab<sp/>the<sp/>frame<sp/>from<sp/>the<sp/>threaded<sp/>video<sp/>stream,<sp/>resize<sp/>it<sp/>to</highlight></codeline>
<codeline lineno="27"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>a<sp/>maximum<sp/>width<sp/>of<sp/>800<sp/>pixels,<sp/>and<sp/>convert<sp/>it<sp/>to</highlight></codeline>
<codeline lineno="28"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grayscale&quot;&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>counter+=1</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ok,frame<sp/>=<sp/>vs.read()</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/>ok:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>frame<sp/>=<sp/>imutils.resize(frame,<sp/>width=800)</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gray<sp/>=<sp/>cv2.cvtColor(frame,<sp/>cv2.COLOR_BGR2GRAY)</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>detect<sp/>faces<sp/>in<sp/>the<sp/>grayscale<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rects<sp/>=<sp/>detector(gray,<sp/>0)</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RectQueue.put(rects)</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>loop<sp/>over<sp/>the<sp/>face<sp/>detections</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>rect<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>rects:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape<sp/>=<sp/>predictor(gray,<sp/>rect)</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>shape<sp/>=<sp/>face_utils.shape_to_np(shape)</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#print<sp/>(&quot;Rect<sp/>from<sp/>face_detect:&quot;,rect,&quot;Detected<sp/>face<sp/>width:<sp/>&quot;,rect.right()-rect.left(),&quot;<sp/>height:&quot;,rect.bottom()-rect.top())</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(x,<sp/>y)<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>shape:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv2.circle(frame,<sp/>(x,<sp/>y),<sp/>1,<sp/>(0,<sp/>0,<sp/>255),<sp/>-1)</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#FrameQueue.put(frame)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RectQueue.put(rects)</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/ubuntu/workspace/roboy_vision/src/FaceDetect.py"/>
  </compounddef>
</doxygen>
