<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="connected__layer_8h" kind="file" language="C++">
    <compoundname>connected_layer.h</compoundname>
    <includes refid="activations_8h" local="yes">activations.h</includes>
    <includes refid="layer_8h" local="yes">layer.h</includes>
    <includes refid="network_8h" local="yes">network.h</includes>
    <includedby refid="connected__layer_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/connected_layer.c</includedby>
    <includedby refid="gru__layer_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/gru_layer.c</includedby>
    <includedby refid="lstm__layer_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/lstm_layer.c</includedby>
    <includedby refid="network_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/network.c</includedby>
    <includedby refid="parser_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/parser.c</includedby>
    <includedby refid="rnn__layer_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/rnn_layer.c</includedby>
    <incdepgraph>
      <node id="518">
        <label>box.h</label>
        <link refid="box_8h_source"/>
        <childnode refid="507" relation="include">
        </childnode>
      </node>
      <node id="517">
        <label>float.h</label>
      </node>
      <node id="508">
        <label>stdlib.h</label>
      </node>
      <node id="505">
        <label>/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/connected_layer.h</label>
        <link refid="connected_layer.h"/>
        <childnode refid="506" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="515" relation="include">
        </childnode>
      </node>
      <node id="512">
        <label>cuda.h</label>
        <link refid="cuda_8h_source"/>
        <childnode refid="507" relation="include">
        </childnode>
      </node>
      <node id="519">
        <label>data.h</label>
        <link refid="data_8h_source"/>
        <childnode refid="511" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="520" relation="include">
        </childnode>
        <childnode refid="521" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
      </node>
      <node id="515">
        <label>network.h</label>
        <link refid="network_8h_source"/>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="516" relation="include">
        </childnode>
        <childnode refid="514" relation="include">
        </childnode>
        <childnode refid="519" relation="include">
        </childnode>
        <childnode refid="522" relation="include">
        </childnode>
      </node>
      <node id="506">
        <label>activations.h</label>
        <link refid="activations_8h_source"/>
        <childnode refid="507" relation="include">
        </childnode>
        <childnode refid="512" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
      </node>
      <node id="521">
        <label>list.h</label>
        <link refid="list_8h_source"/>
        <childnode refid="507" relation="include">
        </childnode>
      </node>
      <node id="520">
        <label>matrix.h</label>
        <link refid="matrix_8h_source"/>
        <childnode refid="507" relation="include">
        </childnode>
      </node>
      <node id="507">
        <label>darknet.h</label>
        <link refid="darknet_8h_source"/>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="511" relation="include">
        </childnode>
      </node>
      <node id="514">
        <label>layer.h</label>
        <link refid="layer_8h_source"/>
        <childnode refid="507" relation="include">
        </childnode>
      </node>
      <node id="511">
        <label>pthread.h</label>
      </node>
      <node id="516">
        <label>image.h</label>
        <link refid="image_8h_source"/>
        <childnode refid="508" relation="include">
        </childnode>
        <childnode refid="509" relation="include">
        </childnode>
        <childnode refid="517" relation="include">
        </childnode>
        <childnode refid="510" relation="include">
        </childnode>
        <childnode refid="513" relation="include">
        </childnode>
        <childnode refid="518" relation="include">
        </childnode>
        <childnode refid="507" relation="include">
        </childnode>
      </node>
      <node id="510">
        <label>string.h</label>
      </node>
      <node id="513">
        <label>math.h</label>
      </node>
      <node id="522">
        <label>tree.h</label>
        <link refid="tree_8h_source"/>
        <childnode refid="507" relation="include">
        </childnode>
      </node>
      <node id="509">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="connected__layer_8h_1a8c03925e07504c5f996beb769d594852" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlayer" kindref="compound">layer</ref></type>
        <definition>layer make_connected_layer</definition>
        <argsstring>(int batch, int inputs, int outputs, ACTIVATION activation, int batch_normalize, int adam)</argsstring>
        <name>make_connected_layer</name>
        <param>
          <type>int</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>outputs</declname>
        </param>
        <param>
          <type>ACTIVATION</type>
          <declname>activation</declname>
        </param>
        <param>
          <type>int</type>
          <declname>batch_normalize</declname>
        </param>
        <param>
          <type>int</type>
          <declname>adam</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/connected_layer.h" line="8" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/connected_layer.c" bodystart="14" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="connected__layer_8h_1a4cf1c868f90698cafc796c63a20ae371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void forward_connected_layer</definition>
        <argsstring>(layer l, network net)</argsstring>
        <name>forward_connected_layer</name>
        <param>
          <type><ref refid="structlayer" kindref="compound">layer</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="structnetwork" kindref="compound">network</ref></type>
          <declname>net</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/connected_layer.h" line="10" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/connected_layer.c" bodystart="151" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="connected__layer_8h_1a510156aa4506e40152e6fc6dafa991c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void backward_connected_layer</definition>
        <argsstring>(layer l, network net)</argsstring>
        <name>backward_connected_layer</name>
        <param>
          <type><ref refid="structlayer" kindref="compound">layer</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="structnetwork" kindref="compound">network</ref></type>
          <declname>net</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/connected_layer.h" line="11" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/connected_layer.c" bodystart="169" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="connected__layer_8h_1a822f192980954880e61172c8fd3477c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void update_connected_layer</definition>
        <argsstring>(layer l, update_args a)</argsstring>
        <name>update_connected_layer</name>
        <param>
          <type><ref refid="structlayer" kindref="compound">layer</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="structupdate__args" kindref="compound">update_args</ref></type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/connected_layer.h" line="12" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/connected_layer.c" bodystart="132" bodyend="149"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>CONNECTED_LAYER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CONNECTED_LAYER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;activations.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;layer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="structlayer" kindref="compound">layer</ref><sp/>make_connected_layer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputs,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>outputs,<sp/>ACTIVATION<sp/>activation,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch_normalize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>adam);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward_connected_layer(<ref refid="structlayer" kindref="compound">layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>backward_connected_layer(<ref refid="structlayer" kindref="compound">layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_connected_layer(<ref refid="structlayer" kindref="compound">layer</ref><sp/>l,<sp/><ref refid="structupdate__args" kindref="compound">update_args</ref><sp/>a);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward_connected_layer_gpu(<ref refid="structlayer" kindref="compound">layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>backward_connected_layer_gpu(<ref refid="structlayer" kindref="compound">layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update_connected_layer_gpu(<ref refid="structlayer" kindref="compound">layer</ref><sp/>l,<sp/><ref refid="structupdate__args" kindref="compound">update_args</ref><sp/>a);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>push_connected_layer(<ref refid="structlayer" kindref="compound">layer</ref><sp/>l);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pull_connected_layer(<ref refid="structlayer" kindref="compound">layer</ref><sp/>l);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/connected_layer.h"/>
  </compounddef>
</doxygen>
