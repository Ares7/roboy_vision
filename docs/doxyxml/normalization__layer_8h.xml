<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="normalization__layer_8h" kind="file" language="C++">
    <compoundname>normalization_layer.h</compoundname>
    <includes refid="image_8h" local="yes">image.h</includes>
    <includes refid="layer_8h" local="yes">layer.h</includes>
    <includes refid="network_8h" local="yes">network.h</includes>
    <includedby refid="network_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/network.c</includedby>
    <includedby refid="normalization__layer_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/normalization_layer.c</includedby>
    <includedby refid="parser_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/parser.c</includedby>
    <incdepgraph>
      <node id="1422">
        <label>box.h</label>
        <link refid="box_8h_source"/>
        <childnode refid="1423" relation="include">
        </childnode>
      </node>
      <node id="1415">
        <label>/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/normalization_layer.h</label>
        <link refid="normalization_layer.h"/>
        <childnode refid="1416" relation="include">
        </childnode>
        <childnode refid="1425" relation="include">
        </childnode>
        <childnode refid="1426" relation="include">
        </childnode>
      </node>
      <node id="1419">
        <label>float.h</label>
      </node>
      <node id="1417">
        <label>stdlib.h</label>
      </node>
      <node id="1427">
        <label>data.h</label>
        <link refid="data_8h_source"/>
        <childnode refid="1424" relation="include">
        </childnode>
        <childnode refid="1423" relation="include">
        </childnode>
        <childnode refid="1428" relation="include">
        </childnode>
        <childnode refid="1429" relation="include">
        </childnode>
        <childnode refid="1416" relation="include">
        </childnode>
        <childnode refid="1430" relation="include">
        </childnode>
      </node>
      <node id="1426">
        <label>network.h</label>
        <link refid="network_8h_source"/>
        <childnode refid="1423" relation="include">
        </childnode>
        <childnode refid="1416" relation="include">
        </childnode>
        <childnode refid="1425" relation="include">
        </childnode>
        <childnode refid="1427" relation="include">
        </childnode>
        <childnode refid="1430" relation="include">
        </childnode>
      </node>
      <node id="1429">
        <label>list.h</label>
        <link refid="list_8h_source"/>
        <childnode refid="1423" relation="include">
        </childnode>
      </node>
      <node id="1428">
        <label>matrix.h</label>
        <link refid="matrix_8h_source"/>
        <childnode refid="1423" relation="include">
        </childnode>
      </node>
      <node id="1423">
        <label>darknet.h</label>
        <link refid="darknet_8h_source"/>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1420" relation="include">
        </childnode>
        <childnode refid="1424" relation="include">
        </childnode>
      </node>
      <node id="1425">
        <label>layer.h</label>
        <link refid="layer_8h_source"/>
        <childnode refid="1423" relation="include">
        </childnode>
      </node>
      <node id="1424">
        <label>pthread.h</label>
      </node>
      <node id="1416">
        <label>image.h</label>
        <link refid="image_8h_source"/>
        <childnode refid="1417" relation="include">
        </childnode>
        <childnode refid="1418" relation="include">
        </childnode>
        <childnode refid="1419" relation="include">
        </childnode>
        <childnode refid="1420" relation="include">
        </childnode>
        <childnode refid="1421" relation="include">
        </childnode>
        <childnode refid="1422" relation="include">
        </childnode>
        <childnode refid="1423" relation="include">
        </childnode>
      </node>
      <node id="1420">
        <label>string.h</label>
      </node>
      <node id="1421">
        <label>math.h</label>
      </node>
      <node id="1430">
        <label>tree.h</label>
        <link refid="tree_8h_source"/>
        <childnode refid="1423" relation="include">
        </childnode>
      </node>
      <node id="1418">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="normalization__layer_8h_1ab4c22cbeb9a0ba2c9feced7f94179bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlayer" kindref="compound">layer</ref></type>
        <definition>layer make_normalization_layer</definition>
        <argsstring>(int batch, int w, int h, int c, int size, float alpha, float beta, float kappa)</argsstring>
        <name>make_normalization_layer</name>
        <param>
          <type>int</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>float</type>
          <declname>alpha</declname>
        </param>
        <param>
          <type>float</type>
          <declname>beta</declname>
        </param>
        <param>
          <type>float</type>
          <declname>kappa</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/normalization_layer.h" line="8" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/normalization_layer.c" bodystart="6" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="normalization__layer_8h_1a66937324cb617f0264839c717539a38a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void resize_normalization_layer</definition>
        <argsstring>(layer *layer, int h, int w)</argsstring>
        <name>resize_normalization_layer</name>
        <param>
          <type><ref refid="structlayer" kindref="compound">layer</ref> *</type>
          <declname>layer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>h</declname>
        </param>
        <param>
          <type>int</type>
          <declname>w</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/normalization_layer.h" line="9" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/normalization_layer.c" bodystart="40" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="normalization__layer_8h_1ac8752bfc267bd86411a37a46e56ec034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void forward_normalization_layer</definition>
        <argsstring>(const layer layer, network net)</argsstring>
        <name>forward_normalization_layer</name>
        <param>
          <type>const <ref refid="structlayer" kindref="compound">layer</ref></type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="structnetwork" kindref="compound">network</ref></type>
          <declname>net</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/normalization_layer.h" line="10" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/normalization_layer.c" bodystart="66" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="normalization__layer_8h_1ab2a50eea8cb4be828d34c3b69a5540e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void backward_normalization_layer</definition>
        <argsstring>(const layer layer, network net)</argsstring>
        <name>backward_normalization_layer</name>
        <param>
          <type>const <ref refid="structlayer" kindref="compound">layer</ref></type>
          <declname>layer</declname>
        </param>
        <param>
          <type><ref refid="structnetwork" kindref="compound">network</ref></type>
          <declname>net</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/normalization_layer.h" line="11" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/normalization_layer.c" bodystart="97" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="normalization__layer_8h_1a2abf1f6bfee9d65b5f0626e315db2040" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void visualize_normalization_layer</definition>
        <argsstring>(layer layer, char *window)</argsstring>
        <name>visualize_normalization_layer</name>
        <param>
          <type><ref refid="structlayer" kindref="compound">layer</ref></type>
          <declname>layer</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>window</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/normalization_layer.h" line="12" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>NORMALIZATION_LAYER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NORMALIZATION_LAYER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;image.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;layer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"><ref refid="structlayer" kindref="compound">layer</ref><sp/>make_normalization_layer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>beta,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>kappa);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize_normalization_layer(<ref refid="structlayer" kindref="compound">layer</ref><sp/>*<ref refid="structlayer" kindref="compound">layer</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward_normalization_layer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlayer" kindref="compound">layer</ref><sp/><ref refid="structlayer" kindref="compound">layer</ref>,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>backward_normalization_layer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlayer" kindref="compound">layer</ref><sp/><ref refid="structlayer" kindref="compound">layer</ref>,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>visualize_normalization_layer(<ref refid="structlayer" kindref="compound">layer</ref><sp/><ref refid="structlayer" kindref="compound">layer</ref>,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*window);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward_normalization_layer_gpu(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlayer" kindref="compound">layer</ref><sp/><ref refid="structlayer" kindref="compound">layer</ref>,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>backward_normalization_layer_gpu(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlayer" kindref="compound">layer</ref><sp/><ref refid="structlayer" kindref="compound">layer</ref>,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/normalization_layer.h"/>
  </compounddef>
</doxygen>
