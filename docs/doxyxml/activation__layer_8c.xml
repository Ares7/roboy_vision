<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="activation__layer_8c" kind="file" language="C++">
    <compoundname>activation_layer.c</compoundname>
    <includes refid="activation__layer_8h" local="yes">activation_layer.h</includes>
    <includes refid="utils_8h" local="yes">utils.h</includes>
    <includes refid="cuda_8h" local="yes">cuda.h</includes>
    <includes refid="blas_8h" local="yes">blas.h</includes>
    <includes refid="gemm_8h" local="yes">gemm.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <incdepgraph>
      <node id="254">
        <label>box.h</label>
        <link refid="box_8h_source"/>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="253">
        <label>float.h</label>
      </node>
      <node id="244">
        <label>stdlib.h</label>
      </node>
      <node id="248">
        <label>cuda.h</label>
        <link refid="cuda_8h_source"/>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="255">
        <label>data.h</label>
        <link refid="data_8h_source"/>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="256" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
      </node>
      <node id="251">
        <label>network.h</label>
        <link refid="network_8h_source"/>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="255" relation="include">
        </childnode>
        <childnode refid="258" relation="include">
        </childnode>
      </node>
      <node id="262">
        <label>gemm.h</label>
        <link refid="gemm_8h_source"/>
      </node>
      <node id="240">
        <label>/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/activation_layer.c</label>
        <link refid="activation_layer.c"/>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="259" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="261" relation="include">
        </childnode>
        <childnode refid="262" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
      </node>
      <node id="241">
        <label>activation_layer.h</label>
        <link refid="activation__layer_8h_source"/>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
      </node>
      <node id="242">
        <label>activations.h</label>
        <link refid="activations_8h_source"/>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
      </node>
      <node id="257">
        <label>list.h</label>
        <link refid="list_8h_source"/>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="256">
        <label>matrix.h</label>
        <link refid="matrix_8h_source"/>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="243">
        <label>darknet.h</label>
        <link refid="darknet_8h_source"/>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
      </node>
      <node id="250">
        <label>layer.h</label>
        <link refid="layer_8h_source"/>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="247">
        <label>pthread.h</label>
      </node>
      <node id="252">
        <label>image.h</label>
        <link refid="image_8h_source"/>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="246">
        <label>string.h</label>
      </node>
      <node id="261">
        <label>blas.h</label>
        <link refid="blas_8h_source"/>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="259">
        <label>utils.h</label>
        <link refid="utils_8h_source"/>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="260" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="257" relation="include">
        </childnode>
      </node>
      <node id="260">
        <label>time.h</label>
      </node>
      <node id="249">
        <label>math.h</label>
      </node>
      <node id="258">
        <label>tree.h</label>
        <link refid="tree_8h_source"/>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
      <node id="245">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="activation__layer_8c_1a09b791f4a73a312d7ae9757b5107c6bd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlayer" kindref="compound">layer</ref></type>
        <definition>layer make_activation_layer</definition>
        <argsstring>(int batch, int inputs, ACTIVATION activation)</argsstring>
        <name>make_activation_layer</name>
        <param>
          <type>int</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>ACTIVATION</type>
          <declname>activation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/activation_layer.c" line="12" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/activation_layer.c" bodystart="12" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="activation__layer_8c_1a8f346b3f509b6cec4dbcfe408484ed04" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void forward_activation_layer</definition>
        <argsstring>(layer l, network net)</argsstring>
        <name>forward_activation_layer</name>
        <param>
          <type><ref refid="structlayer" kindref="compound">layer</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="structnetwork" kindref="compound">network</ref></type>
          <declname>net</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/activation_layer.c" line="38" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/activation_layer.c" bodystart="38" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="activation__layer_8c_1aa0ae69f7f4fb325e79e59eaedfc874b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void backward_activation_layer</definition>
        <argsstring>(layer l, network net)</argsstring>
        <name>backward_activation_layer</name>
        <param>
          <type><ref refid="structlayer" kindref="compound">layer</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="structnetwork" kindref="compound">network</ref></type>
          <declname>net</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/activation_layer.c" line="44" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/activation_layer.c" bodystart="44" bodyend="48"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;activation_layer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;utils.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;cuda.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;blas.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gemm.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><ref refid="structlayer" kindref="compound">layer</ref><sp/>make_activation_layer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputs,<sp/>ACTIVATION<sp/>activation)</highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structlayer" kindref="compound">layer</ref><sp/>l<sp/>=<sp/>{0};</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>l.type<sp/>=<sp/>ACTIVE;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>l.inputs<sp/>=<sp/>inputs;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>l.outputs<sp/>=<sp/>inputs;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>l.batch=batch;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>l.output<sp/>=<sp/>calloc(batch*inputs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>l.delta<sp/>=<sp/>calloc(batch*inputs,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*));</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>l.forward<sp/>=<sp/>forward_activation_layer;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>l.backward<sp/>=<sp/>backward_activation_layer;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>l.forward_gpu<sp/>=<sp/>forward_activation_layer_gpu;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/>l.backward_gpu<sp/>=<sp/>backward_activation_layer_gpu;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>l.output_gpu<sp/>=<sp/>cuda_make_array(l.output,<sp/>inputs*batch);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>l.delta_gpu<sp/>=<sp/>cuda_make_array(l.delta,<sp/>inputs*batch);</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>l.activation<sp/>=<sp/>activation;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;Activation<sp/>Layer:<sp/>%d<sp/>inputs\n&quot;</highlight><highlight class="normal">,<sp/>inputs);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward_activation_layer(<ref refid="structlayer" kindref="compound">layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net)</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>copy_cpu(l.outputs*l.batch,<sp/>net.input,<sp/>1,<sp/>l.output,<sp/>1);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>activate_array(l.output,<sp/>l.outputs*l.batch,<sp/>l.activation);</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>backward_activation_layer(<ref refid="structlayer" kindref="compound">layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net)</highlight></codeline>
<codeline lineno="45"><highlight class="normal">{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>gradient_array(l.output,<sp/>l.outputs*l.batch,<sp/>l.activation,<sp/>l.delta);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>copy_cpu(l.outputs*l.batch,<sp/>l.delta,<sp/>1,<sp/>net.delta,<sp/>1);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward_activation_layer_gpu(<ref refid="structlayer" kindref="compound">layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>copy_gpu(l.outputs*l.batch,<sp/>net.input_gpu,<sp/>1,<sp/>l.output_gpu,<sp/>1);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/>activate_array_gpu(l.output_gpu,<sp/>l.outputs*l.batch,<sp/>l.activation);</highlight></codeline>
<codeline lineno="56"><highlight class="normal">}</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>backward_activation_layer_gpu(<ref refid="structlayer" kindref="compound">layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net)</highlight></codeline>
<codeline lineno="59"><highlight class="normal">{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>gradient_array_gpu(l.output_gpu,<sp/>l.outputs*l.batch,<sp/>l.activation,<sp/>l.delta_gpu);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>copy_gpu(l.outputs*l.batch,<sp/>l.delta_gpu,<sp/>1,<sp/>net.delta_gpu,<sp/>1);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/activation_layer.c"/>
  </compounddef>
</doxygen>
