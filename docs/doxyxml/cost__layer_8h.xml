<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="cost__layer_8h" kind="file" language="C++">
    <compoundname>cost_layer.h</compoundname>
    <includes refid="layer_8h" local="yes">layer.h</includes>
    <includes refid="network_8h" local="yes">network.h</includes>
    <includedby refid="compare_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/compare.c</includedby>
    <includedby refid="cost__layer_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.c</includedby>
    <includedby refid="demo_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/demo.c</includedby>
    <includedby refid="network_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/network.c</includedby>
    <includedby refid="parser_8c" local="yes">/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/parser.c</includedby>
    <incdepgraph>
      <node id="603">
        <label>box.h</label>
        <link refid="box_8h_source"/>
        <childnode refid="594" relation="include">
        </childnode>
      </node>
      <node id="601">
        <label>float.h</label>
      </node>
      <node id="595">
        <label>stdlib.h</label>
      </node>
      <node id="604">
        <label>data.h</label>
        <link refid="data_8h_source"/>
        <childnode refid="598" relation="include">
        </childnode>
        <childnode refid="594" relation="include">
        </childnode>
        <childnode refid="605" relation="include">
        </childnode>
        <childnode refid="606" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
      </node>
      <node id="599">
        <label>network.h</label>
        <link refid="network_8h_source"/>
        <childnode refid="594" relation="include">
        </childnode>
        <childnode refid="600" relation="include">
        </childnode>
        <childnode refid="593" relation="include">
        </childnode>
        <childnode refid="604" relation="include">
        </childnode>
        <childnode refid="607" relation="include">
        </childnode>
      </node>
      <node id="606">
        <label>list.h</label>
        <link refid="list_8h_source"/>
        <childnode refid="594" relation="include">
        </childnode>
      </node>
      <node id="592">
        <label>/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.h</label>
        <link refid="cost_layer.h"/>
        <childnode refid="593" relation="include">
        </childnode>
        <childnode refid="599" relation="include">
        </childnode>
      </node>
      <node id="605">
        <label>matrix.h</label>
        <link refid="matrix_8h_source"/>
        <childnode refid="594" relation="include">
        </childnode>
      </node>
      <node id="594">
        <label>darknet.h</label>
        <link refid="darknet_8h_source"/>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="598" relation="include">
        </childnode>
      </node>
      <node id="593">
        <label>layer.h</label>
        <link refid="layer_8h_source"/>
        <childnode refid="594" relation="include">
        </childnode>
      </node>
      <node id="598">
        <label>pthread.h</label>
      </node>
      <node id="600">
        <label>image.h</label>
        <link refid="image_8h_source"/>
        <childnode refid="595" relation="include">
        </childnode>
        <childnode refid="596" relation="include">
        </childnode>
        <childnode refid="601" relation="include">
        </childnode>
        <childnode refid="597" relation="include">
        </childnode>
        <childnode refid="602" relation="include">
        </childnode>
        <childnode refid="603" relation="include">
        </childnode>
        <childnode refid="594" relation="include">
        </childnode>
      </node>
      <node id="597">
        <label>string.h</label>
      </node>
      <node id="602">
        <label>math.h</label>
      </node>
      <node id="607">
        <label>tree.h</label>
        <link refid="tree_8h_source"/>
        <childnode refid="594" relation="include">
        </childnode>
      </node>
      <node id="596">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="cost__layer_8h_1a590de8be62a2326805792547606f6890" prot="public" static="no">
        <type><ref refid="structlayer" kindref="compound">layer</ref></type>
        <definition>typedef layer cost_layer</definition>
        <argsstring></argsstring>
        <name>cost_layer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.h" line="6" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.h" bodystart="6" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="cost__layer_8h_1aa56424870fea9f9bf52f45da81aa8695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>COST_TYPE</type>
        <definition>COST_TYPE get_cost_type</definition>
        <argsstring>(char *s)</argsstring>
        <name>get_cost_type</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.h" line="8" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.c" bodystart="10" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="cost__layer_8h_1a5c8a71a690106e17a147ce66698a1faf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* get_cost_string</definition>
        <argsstring>(COST_TYPE a)</argsstring>
        <name>get_cost_string</name>
        <param>
          <type>COST_TYPE</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.h" line="9" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.c" bodystart="21" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="cost__layer_8h_1a3cc7b7da09bbf597d24d28e9f660823a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structlayer" kindref="compound">cost_layer</ref></type>
        <definition>cost_layer make_cost_layer</definition>
        <argsstring>(int batch, int inputs, COST_TYPE type, float scale)</argsstring>
        <name>make_cost_layer</name>
        <param>
          <type>int</type>
          <declname>batch</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputs</declname>
        </param>
        <param>
          <type>COST_TYPE</type>
          <declname>type</declname>
        </param>
        <param>
          <type>float</type>
          <declname>scale</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.h" line="10" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.c" bodystart="38" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="cost__layer_8h_1a82ce312bd8bfd0dc76af2bb937ce9765" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void forward_cost_layer</definition>
        <argsstring>(const cost_layer l, network net)</argsstring>
        <name>forward_cost_layer</name>
        <param>
          <type>const <ref refid="structlayer" kindref="compound">cost_layer</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="structnetwork" kindref="compound">network</ref></type>
          <declname>net</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.h" line="11" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.c" bodystart="79" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="cost__layer_8h_1acef4814b1a24fb97c797781d1618ec81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void backward_cost_layer</definition>
        <argsstring>(const cost_layer l, network net)</argsstring>
        <name>backward_cost_layer</name>
        <param>
          <type>const <ref refid="structlayer" kindref="compound">cost_layer</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="structnetwork" kindref="compound">network</ref></type>
          <declname>net</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.h" line="12" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.c" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="cost__layer_8h_1aa47c87d0d7e2b9f5be07ee2962698483" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void resize_cost_layer</definition>
        <argsstring>(cost_layer *l, int inputs)</argsstring>
        <name>resize_cost_layer</name>
        <param>
          <type><ref refid="structlayer" kindref="compound">cost_layer</ref> *</type>
          <declname>l</declname>
        </param>
        <param>
          <type>int</type>
          <declname>inputs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.h" line="13" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.c" bodystart="65" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>COST_LAYER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COST_LAYER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;layer.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;network.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structlayer" kindref="compound">layer</ref><sp/><ref refid="structlayer" kindref="compound">cost_layer</ref>;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal">COST_TYPE<sp/>get_cost_type(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s);</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*get_cost_string(COST_TYPE<sp/>a);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="structlayer" kindref="compound">cost_layer</ref><sp/>make_cost_layer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>batch,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputs,<sp/>COST_TYPE<sp/>type,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>scale);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward_cost_layer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlayer" kindref="compound">cost_layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>backward_cost_layer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlayer" kindref="compound">cost_layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize_cost_layer(<ref refid="structlayer" kindref="compound">cost_layer</ref><sp/>*l,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>inputs);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>GPU</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>forward_cost_layer_gpu(<ref refid="structlayer" kindref="compound">cost_layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>backward_cost_layer_gpu(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structlayer" kindref="compound">cost_layer</ref><sp/>l,<sp/><ref refid="structnetwork" kindref="compound">network</ref><sp/>net);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ubuntu/workspace/roboy_vision/src/pyyolo/darknet/src/cost_layer.h"/>
  </compounddef>
</doxygen>
