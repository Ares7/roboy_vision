<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="face__detection_8py" kind="file" language="Python">
    <compoundname>face_detection.py</compoundname>
    <innernamespace refid="namespaceface__detection">face_detection</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1" refid="namespaceface__detection" refkind="compound"><highlight class="comment">##<sp/>@package<sp/>face_detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>This<sp/>module<sp/>processes<sp/>realsense<sp/>camera<sp/>input<sp/>and<sp/>runs<sp/>face<sp/>detection,<sp/>alignment<sp/>and<sp/>pose<sp/>estimation.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>Module<sp/>Tasks:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>-<sp/>Main<sp/>loop<sp/>to<sp/>process<sp/>realsense<sp/>camera<sp/>input</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>-<sp/>Run<sp/>Face<sp/>Detection<sp/>based<sp/>MTCNN<sp/>for<sp/>Joint<sp/>Face<sp/>Detection<sp/>&amp;<sp/>Alignment<sp/>for<sp/>each<sp/>frame</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>-<sp/>Track<sp/>Face<sp/>over<sp/>frames</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>-<sp/>Calculate<sp/>Face<sp/>Position<sp/>in<sp/>3D<sp/>coordinates</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>-<sp/>Send<sp/>ROS<sp/>msg<sp/>containing<sp/>face<sp/>area,<sp/>key<sp/>points<sp/>and<sp/>face<sp/>pose<sp/>and<sp/>unique<sp/>ID<sp/>for<sp/>each<sp/>detected<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>Current<sp/>Workarounds:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>-<sp/>Tracking<sp/>not<sp/>implemented<sp/>(no<sp/>unique<sp/>face<sp/>id<sp/>provided)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>-<sp/>3D<sp/>coodinates<sp/>not<sp/>implemented<sp/>(face<sp/>region<sp/>used<sp/>as<sp/>distance<sp/>measure)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>-<sp/>Function<sp/>for<sp/>Face<sp/>Recognition<sp/>also<sp/>implemented<sp/>in<sp/>this<sp/>modue<sp/>for<sp/>simplicity<sp/>(to<sp/>be<sp/>put<sp/>into<sp/>anothe<sp/>rmodule)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/><sp/>-<sp/>No<sp/>ROS<sp/>communication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="comment">#<sp/>basic<sp/>imports</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>sys</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>numpy<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>np</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>cv2</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>os</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>scipy<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>misc</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>time</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>re</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pickle</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>thread<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>start_new_thread</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Import<sp/>for<sp/>Neural<sp/>Networks</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>tensorflow<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>tf</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">from</highlight><highlight class="normal"><sp/>models.mtcnn<sp/></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>detect_face</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Realsense<sp/>libraries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">import</highlight><highlight class="normal"><sp/>pyrealsense<sp/></highlight><highlight class="keyword">as</highlight><highlight class="normal"><sp/>pyrs</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Define<sp/>of<sp/>standard<sp/>face<sp/>size<sp/>for<sp/>alignment<sp/>(EXPECT_SIZE<sp/>x<sp/>EXPECT_SIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal">EXPECT_SIZE<sp/>=<sp/>160</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment">#<sp/>Define<sp/>bounding<sp/>box<sp/>size<sp/>for<sp/>proximity<sp/>detetcion<sp/>of<sp/>faces<sp/>(increase<sp/>to<sp/>make<sp/>distance<sp/>smaller)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal">FACE_AREA<sp/>=<sp/>1500<sp/><sp/></highlight><highlight class="comment">#<sp/>Face<sp/>area<sp/>for<sp/>approx.<sp/>1.5m<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Function<sp/>to<sp/>do<sp/>face<sp/>detection<sp/>and<sp/>alignment<sp/>on<sp/>an<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>Run<sp/>face<sp/>detection<sp/>on<sp/>the<sp/>full<sp/>input<sp/>image<sp/>using<sp/>a<sp/>MTCNN<sp/>for<sp/>Joint<sp/>Detection<sp/>and<sp/>Alignment<sp/>from<sp/>here:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>https://github.com/pangyupo/mxnet_mtcnn_face_detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>img<sp/>The<sp/>RGB<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@return<sp/>Bounding<sp/>boxes<sp/>bb<sp/>and<sp/>landmark<sp/>points<sp/>for<sp/>eyes,<sp/>nose<sp/>and<sp/>mouth<sp/>edges.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceface__detection_1a504d15424b80d78ad34f608f419fbfcf" kindref="member">detect_face_and_landmarks_mtcnn</ref>(img):</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>img<sp/>=<sp/>img[:,<sp/>:,<sp/>0:3]</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>bbs,<sp/>lms<sp/>=<sp/>detect_face.detect_face(img,<sp/>minsize,<sp/>pnet,<sp/>rnet,<sp/>onet,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>threshold,<sp/>factor)</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>boxes<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>landmarks<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/>face_index<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>r<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bbs:</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r<sp/>=<sp/>r.astype(int)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points<sp/>=<sp/>[]</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>i<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>range(5):</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>points.append((lms[i][face_index],<sp/>lms[i<sp/>+<sp/>5][face_index]))</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>landmarks.append(points)</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boxes.append((r[0],<sp/>r[1],<sp/>r[2],<sp/>r[3]))</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_index<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>boxes,<sp/>landmarks</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Function<sp/>to<sp/>align<sp/>detected<sp/>faces.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>The<sp/>current<sp/>implementation<sp/>crops<sp/>the<sp/>picture<sp/>given<sp/>a<sp/>face<sp/>region.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>We<sp/>do<sp/>not<sp/>use<sp/>actual<sp/>alignment<sp/>because<sp/>performance<sp/>increase<sp/>for<sp/>face<sp/>recognition<sp/>is<sp/>marginal<sp/>and<sp/>only<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>slows<sp/>down<sp/>realtime<sp/>performance<sp/>as<sp/>is<sp/>also<sp/>argued<sp/>here:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>https://github.com/davidsandberg/facenet/issues/93</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>img<sp/>The<sp/>RGB<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>bb<sp/>The<sp/>bounding<sp/>box<sp/>of<sp/>a<sp/>face<sp/>as<sp/>tuple<sp/>(x1,<sp/>y1,<sp/>x2,<sp/>y2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@return<sp/>Returns<sp/>the<sp/>cropped<sp/>face<sp/>region.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceface__detection_1ad092251552201bffe5b0a9c03cfadb84" kindref="member">align_face_mtcnn</ref>(img,<sp/>bb):</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">assert</highlight><highlight class="normal"><sp/>isinstance(bb,<sp/>tuple)</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>cropped<sp/>=<sp/>img[bb[1]:bb[3],<sp/>bb[0]:bb[2],<sp/>:]</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>scaled<sp/>=<sp/>misc.imresize(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cropped,<sp/>(EXPECT_SIZE,<sp/>EXPECT_SIZE),<sp/>interp=</highlight><highlight class="stringliteral">&apos;bilinear&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>scaled</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Function<sp/>to<sp/>draw<sp/>bounding<sp/>boxes<sp/>in<sp/>a<sp/>picture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>Given<sp/>an<sp/>image,<sp/>the<sp/>bounding<sp/>boxes<sp/>for<sp/>the<sp/>corresponding<sp/>face<sp/>regions<sp/>are<sp/>drawn.<sp/>Additionally<sp/>a<sp/>resize_factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>is<sp/>used<sp/>if<sp/>the<sp/>bounding<sp/>boxes<sp/>were<sp/>calculated<sp/>on<sp/>a<sp/>scaled<sp/>version<sp/>of<sp/>the<sp/>input<sp/>image.<sp/>Default<sp/>value<sp/>of<sp/>the<sp/>resize<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>is<sp/>1,<sp/>meaning<sp/>bounding<sp/>boxes<sp/>were<sp/>calculated<sp/>on<sp/>the<sp/>same<sp/>image<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>img<sp/>The<sp/>RGB<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>bbs<sp/>An<sp/>array<sp/>of<sp/>bounding<sp/>boxes<sp/>of<sp/>a<sp/>face<sp/>as<sp/>tuple<sp/>(x1,<sp/>y1,<sp/>x2,<sp/>y2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@resize_factor<sp/>factor<sp/>to<sp/>scale<sp/>up<sp/>bounding<sp/>box<sp/>size<sp/>if<sp/>calculated<sp/>on<sp/>different<sp/>picture<sp/>scale.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@return<sp/>Image<sp/>overlayed<sp/>with<sp/>the<sp/>bounding<sp/>boxes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceface__detection_1ad86d2091fa67bdc2816dc397a3754df1" kindref="member">draw_rects</ref>(img,<sp/>bbs,<sp/>resize_factor=1):</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>img.copy()</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>bbs<sp/>=<sp/>(np.array(bbs)<sp/>/<sp/>resize_factor).astype(int)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>left,<sp/>top,<sp/>right,<sp/>bottom<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bbs:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv2.rectangle(result,<sp/>(left,<sp/>top),<sp/>(right,<sp/>bottom),<sp/>(0,<sp/>255,<sp/>0),<sp/>2)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Function<sp/>to<sp/>draw<sp/>feature<sp/>points<sp/>in<sp/>a<sp/>picture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>Given<sp/>an<sp/>image,<sp/>the<sp/>feature<sp/>points<sp/>for<sp/>the<sp/>corresponding<sp/>faces<sp/>are<sp/>drawn.<sp/>Additionally<sp/>a<sp/>resize_factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>is<sp/>used<sp/>if<sp/>the<sp/>feature<sp/>points<sp/>were<sp/>calculated<sp/>on<sp/>a<sp/>scaled<sp/>version<sp/>of<sp/>the<sp/>input<sp/>image.<sp/>Default<sp/>value<sp/>of<sp/>the<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>resize<sp/>factor<sp/>is<sp/>1,<sp/>meaning<sp/>the<sp/>feature<sp/>points<sp/>were<sp/>calculated<sp/>on<sp/>the<sp/>same<sp/>image<sp/>size.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>img<sp/>The<sp/>RGB<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>points<sp/>An<sp/>array<sp/>containing<sp/>arrays<sp/>of<sp/>feature<sp/>points<sp/>of<sp/>a<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@resize_factor<sp/>factor<sp/>to<sp/>scale<sp/>up<sp/>bounding<sp/>box<sp/>size<sp/>if<sp/>calculated<sp/>on<sp/>different<sp/>picture<sp/>scale.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@return<sp/>Image<sp/>overlayed<sp/>with<sp/>the<sp/>feature<sp/>points</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceface__detection_1a00df40f5cff2df790be52b45de27fb62" kindref="member">draw_landmarks</ref>(img,<sp/>points,<sp/>resize_factor):</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>img.copy()</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>face_points<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>points:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>point<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>face_points:</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point<sp/>=<sp/>(int(point[0]<sp/>/<sp/>resize_factor),<sp/>int(</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>point[1]<sp/>/<sp/>resize_factor))</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv2.circle(result,<sp/>point,<sp/>3,<sp/>(0,<sp/>255,<sp/>0),<sp/>-1)</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Returns<sp/>the<sp/>closest<sp/>face<sp/>of<sp/>all<sp/>detected<sp/>faces</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>Current<sp/>implementation<sp/>uses<sp/>bounding<sp/>box<sp/>size<sp/>to<sp/>compare<sp/>proximity</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>bbs<sp/>An<sp/>array<sp/>of<sp/>bounding<sp/>boxes<sp/>of<sp/>a<sp/>face<sp/>as<sp/>tuple<sp/>(x1,<sp/>y1,<sp/>x2,<sp/>y2).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@return<sp/>The<sp/>array<sp/>index<sp/>of<sp/>the<sp/>biggest<sp/>bounding<sp/>box.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceface__detection_1ab5d79d07ad6fb04cfa99e9cb3672c80a" kindref="member">get_closest_face</ref>(bbs):</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>max_id<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>face_area<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>left,<sp/>top,<sp/>right,<sp/>bottom<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bbs:</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_face_area<sp/>=<sp/>(right<sp/>-<sp/>left)<sp/>*<sp/>(bottom<sp/>-<sp/>top)</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp_face_area<sp/>&gt;<sp/>face_area):</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_id<sp/>=<sp/>i</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_area<sp/>=<sp/>tmp_face_area</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_id</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Checks<sp/>whether<sp/>a<sp/>face<sp/>is<sp/>visible<sp/>within<sp/>certain<sp/>distance</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>Current<sp/>implementation<sp/>uses<sp/>bounding<sp/>box<sp/>to<sp/>check<sp/>for<sp/>proximity.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>Key<sp/>value<sp/>defined<sp/>in<sp/>FACE_AREA.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>bbs<sp/>An<sp/>array<sp/>of<sp/>bounding<sp/>boxes<sp/>of<sp/>a<sp/>face<sp/>as<sp/>tuple<sp/>(x1,<sp/>y1,<sp/>x2,<sp/>y2).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@return<sp/>True<sp/>if<sp/>a<sp/>face<sp/>is<sp/>close<sp/>enough,<sp/>False<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceface__detection_1a1f6cacba7956a523078efc4d646d1a08" kindref="member">face_detected</ref>(bbs):</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>face_area<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>left,<sp/>top,<sp/>right,<sp/>bottom<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>bbs:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_face_area<sp/>=<sp/>(right<sp/>-<sp/>left)<sp/>*<sp/>(bottom<sp/>-<sp/>top)</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp_face_area<sp/>&gt;<sp/>face_area):</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_area<sp/>=<sp/>tmp_face_area</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(face_area<sp/>&gt;<sp/>FACE_AREA):</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Identifies<sp/>a<sp/>face<sp/>using<sp/>Facenet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>TODO:<sp/>To<sp/>be<sp/>moved<sp/>into<sp/>other<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>The<sp/>function<sp/>calculates<sp/>the<sp/>128D<sp/>embeddings<sp/>of<sp/>a<sp/>given<sp/>face<sp/>using<sp/>facenet<sp/>in<sp/>this<sp/>implementation:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>https://github.com/davidsandberg/facenet</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>Then<sp/>the<sp/>embeddings<sp/>are<sp/>run<sp/>through<sp/>a<sp/>SVM<sp/>classifier<sp/>to<sp/>identify<sp/>the<sp/>face.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@face_img<sp/>The<sp/>cropped<sp/>image<sp/>of<sp/>the<sp/>face<sp/>region.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>session<sp/>The<sp/>tensorflow<sp/>session<sp/>with<sp/>FaceNet<sp/>already<sp/>loaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>classifier<sp/>The<sp/>SVM<sp/>classifier<sp/>already<sp/>loaded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@return<sp/>Return<sp/>the<sp/>name<sp/>of<sp/>the<sp/>face.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceface__detection_1a2a8120285c1546f7c888d4172d8c4961" kindref="member">recognize_face</ref>(face_img,<sp/>session,<sp/>classifier):</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>calculate<sp/>128D<sp/>embeddings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>feed_dict<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image_batch:<sp/>np.expand_dims(face_img,<sp/>0),</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>phase_train_placeholder:<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>rep<sp/>=<sp/>session.run(embeddings,<sp/>feed_dict=feed_dict)[0]</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>get<sp/>class<sp/>probabilities<sp/>using<sp/>SVM<sp/>classifier</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>probabilities<sp/>=<sp/>classifier.predict_proba(rep.reshape(1,<sp/>-1))</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Calculate<sp/>most<sp/>likely<sp/>class</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>out<sp/>=<sp/>np.argmax(probabilities[0])</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Retrieve<sp/>class<sp/>name</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>names<sp/>=<sp/>np.load(</highlight><highlight class="stringliteral">&apos;models/own_embeddings/own_names.npy&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>face_name<sp/>=<sp/>names[out]</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;classification:<sp/>&apos;</highlight><highlight class="normal"><sp/>+<sp/>face_name<sp/>+<sp/></highlight><highlight class="stringliteral">&apos;<sp/>probability:<sp/>&apos;</highlight><highlight class="normal"><sp/>+</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>probabilities[0][out])</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>face_name</highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Function<sp/>to<sp/>load<sp/>a<sp/>tensorflow<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>TODO:<sp/>To<sp/>be<sp/>moved<sp/>into<sp/>other<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>model_dir<sp/>model<sp/>directory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>model_meta<sp/>meta<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>model_content<sp/>checpoint<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@return<sp/>Returns<sp/>a<sp/>tensorflow<sp/>session</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceface__detection_1a764ab9f47d3086ecc957eeb3ee07e196" kindref="member">load_model</ref>(model_dir,<sp/>model_meta,<sp/>model_content):</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>session<sp/>=<sp/>tf.InteractiveSession()</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>model_dir_exp<sp/>=<sp/>os.path.expanduser(model_dir)</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>saver<sp/>=<sp/>tf.train.import_meta_graph(os.path.join(model_dir_exp,<sp/>meta_file))</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>saver.restore(tf.get_default_session(),</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>os.path.join(model_dir_exp,<sp/>ckpt_file))</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>tf.get_default_graph().as_graph_def()</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>session</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Helper<sp/>Function<sp/>to<sp/>load<sp/>a<sp/>tensorlow<sp/>model</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>TODO:<sp/>To<sp/>be<sp/>moved<sp/>into<sp/>other<sp/>module</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>The<sp/>function<sp/>finds<sp/>the<sp/>meta_file<sp/>and<sp/>checkpoint<sp/>within<sp/>a<sp/>given<sp/>path</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@param<sp/>model_dir<sp/>Path<sp/>where<sp/>the<sp/>model<sp/>is<sp/>stored</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>@return<sp/>Returns<sp/>meta_file<sp/>and<sp/>checkpoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">def<sp/></highlight><highlight class="normal"><ref refid="namespaceface__detection_1a4848f6a2163ddf93d0430e16fe7da285" kindref="member">get_model_filenames</ref>(model_dir):</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>files<sp/>=<sp/>os.listdir(model_dir)</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>meta_files<sp/>=<sp/>[s<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>s.endswith(</highlight><highlight class="stringliteral">&apos;.meta&apos;</highlight><highlight class="normal">)]</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(meta_files)<sp/>==<sp/>0:</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;No<sp/>meta<sp/>file<sp/>found<sp/>in<sp/>the<sp/>model<sp/>directory<sp/>(%s)&apos;</highlight><highlight class="normal"><sp/>%<sp/>model_dir)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">elif</highlight><highlight class="normal"><sp/>len(meta_files)<sp/>&gt;<sp/>1:</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">raise</highlight><highlight class="normal"><sp/>ValueError(</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&apos;There<sp/>should<sp/>not<sp/>be<sp/>more<sp/>than<sp/>one<sp/>meta<sp/>file<sp/>in<sp/>the<sp/>model<sp/>directory<sp/>(%s)&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>%<sp/>model_dir)</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>meta_file<sp/>=<sp/>meta_files[0]</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>meta_files<sp/>=<sp/>[s<sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>s<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;.ckpt&apos;</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>s]</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/>max_step<sp/>=<sp/>-1</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>f<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>files:</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step_str<sp/>=<sp/>re.match(</highlight><highlight class="stringliteral">r&apos;(^model-[\w\-<sp/>]+.ckpt-(\d+))&apos;</highlight><highlight class="normal">,<sp/>f)</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>step_str<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">not</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">and</highlight><highlight class="normal"><sp/>len(step_str.groups())<sp/>&gt;=<sp/>2:</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>step<sp/>=<sp/>int(step_str.groups()[1])</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>step<sp/>&gt;<sp/>max_step:</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_step<sp/>=<sp/>step</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ckpt_file<sp/>=<sp/>step_str.groups()[0]</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>meta_file,<sp/>ckpt_file</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment">##<sp/>Entry<sp/>Point<sp/>to<sp/>run<sp/>face<sp/>detection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment">#</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">#<sp/><sp/>Loads<sp/>all<sp/>data<sp/>and<sp/>processes<sp/>realsense<sp/>camera<sp/>input<sp/>in<sp/>a<sp/>loop.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>__name__<sp/>==<sp/></highlight><highlight class="stringliteral">&apos;__main__&apos;</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>start<sp/>pyrealsense<sp/>service</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/>pyrs.start()</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#Image<sp/>Size<sp/>(define<sp/>size<sp/>of<sp/>image)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>x_pixel<sp/>=<sp/>640</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>y_pixel<sp/>=<sp/>480</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>resize<sp/>for<sp/>faster<sp/>processing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>resize_factor<sp/>=<sp/>0.5</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>store<sp/>whether<sp/>a<sp/>face<sp/>was<sp/>detected<sp/>nearby</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/>face_nearby<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>store<sp/>how<sp/>many<sp/>following<sp/>frames<sp/>no<sp/>Face<sp/>was<sp/>detected<sp/>nearby</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>used<sp/>to<sp/>be<sp/>more<sp/>resistant<sp/>for<sp/>single<sp/>frames<sp/>with<sp/>missing<sp/>face<sp/>detection.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>no_face_detect_counter<sp/>=<sp/>0</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>init<sp/>realsense<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>dev<sp/>=<sp/>pyrs.Device(</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device_id=0,</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>streams=[</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyrs.ColourStream(width=x_pixel,<sp/>height=y_pixel,<sp/>fps=30),</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pyrs.DepthStream()</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>])</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Init<sp/>MTCNN<sp/>for<sp/>Face<sp/>Detection</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/>sess<sp/>=<sp/>tf.Session(config=tf.ConfigProto(log_device_placement=</highlight><highlight class="keyword">False</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>pnet,<sp/>rnet,<sp/>onet<sp/>=<sp/>detect_face.create_mtcnn(sess,<sp/></highlight><highlight class="keywordtype">None</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>minsize<sp/>=<sp/>20<sp/><sp/></highlight><highlight class="comment">#<sp/>minimum<sp/>size<sp/>of<sp/>face</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>threshold<sp/>=<sp/>[0.6,<sp/>0.7,<sp/>0.7]<sp/><sp/></highlight><highlight class="comment">#<sp/>three<sp/>steps&apos;s<sp/>threshold</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>factor<sp/>=<sp/>0.709<sp/><sp/></highlight><highlight class="comment">#<sp/>scale<sp/>factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Init<sp/>Facenet<sp/>for<sp/>face<sp/>recognition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Initializing<sp/>Facenet...&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/>tree_model<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;models/Tree/own.mod&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/>svm_model<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;models/SVM/svm_lfw.mod&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/>clf<sp/>=<sp/>pickle.load(open(tree_model,<sp/></highlight><highlight class="stringliteral">&quot;rb&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>model_dir<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;models/facenet&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/>meta_file,<sp/>ckpt_file<sp/>=<sp/><ref refid="namespaceface__detection_1a4848f6a2163ddf93d0430e16fe7da285" kindref="member">get_model_filenames</ref>(os.path.expanduser(model_dir))</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/>session<sp/>=<sp/><ref refid="namespaceface__detection_1a764ab9f47d3086ecc957eeb3ee07e196" kindref="member">load_model</ref>(model_dir,<sp/>meta_file,<sp/>ckpt_file)</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>graph<sp/>=<sp/>tf.get_default_graph()</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/>image_batch<sp/>=<sp/>graph.get_tensor_by_name(</highlight><highlight class="stringliteral">&quot;input:0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>phase_train_placeholder<sp/>=<sp/>graph.get_tensor_by_name(</highlight><highlight class="stringliteral">&quot;phase_train:0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/>embeddings<sp/>=<sp/>graph.get_tensor_by_name(</highlight><highlight class="stringliteral">&quot;embeddings:0&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;done.&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Starting<sp/>detection...&apos;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Get<sp/>frame<sp/>from<sp/>realsense</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dev.wait_for_frame()</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>color<sp/>image<sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c<sp/>=<sp/>cv2.cvtColor(dev.colour,<sp/>cv2.COLOR_RGB2BGR)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#depth<sp/>images</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d<sp/>=<sp/>dev.depth<sp/>*<sp/>dev.depth_scale<sp/>*<sp/>1000</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#resize<sp/>images<sp/>for<sp/>faster<sp/>processing<sp/>with<sp/>resize_factor</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img<sp/>=<sp/>cv2.resize(c,<sp/>(int(resize_factor<sp/>*<sp/>x_pixel),<sp/>int(</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resize_factor<sp/>*<sp/>y_pixel)))</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_img<sp/>=<sp/>cv2.resize(d,<sp/>(int(resize_factor<sp/>*<sp/>x_pixel),<sp/>int(</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resize_factor<sp/>*<sp/>y_pixel)))</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d_img<sp/>=<sp/>cv2.applyColorMap(d.astype(np.uint8),<sp/>cv2.COLORMAP_RAINBOW)</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Detect<sp/>and<sp/>align<sp/>faces<sp/>using<sp/>MTCNN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>total_boxes,<sp/>points<sp/>=<sp/><ref refid="namespaceface__detection_1a504d15424b80d78ad34f608f419fbfcf" kindref="member">detect_face_and_landmarks_mtcnn</ref>(img)</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>If<sp/>no<sp/>faces<sp/>were<sp/>found<sp/>(=<sp/>no<sp/>bounding<sp/>boxes)<sp/>just<sp/>show<sp/>frame<sp/>and<sp/>continie<sp/>loop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>len(total_boxes)<sp/></highlight><highlight class="keywordflow">is</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no_face_detect_counter<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>no_face_detect_counter<sp/>&gt;<sp/>3:</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_nearby<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>show<sp/>image<sp/>and<sp/>continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv2.imshow(</highlight><highlight class="stringliteral">&quot;detection<sp/>result&quot;</highlight><highlight class="normal">,<sp/>c)</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv2.waitKey(10)</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>Check<sp/>if<sp/>faces<sp/>nearby</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/><ref refid="namespaceface__detection_1a1f6cacba7956a523078efc4d646d1a08" kindref="member">face_detected</ref>(total_boxes):</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_nearby<sp/>=<sp/></highlight><highlight class="keyword">True</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>no_face_detect_counter<sp/>+=<sp/>1</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>no_face_detect_counter<sp/>&gt;<sp/>3:</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>face_nearby<sp/>=<sp/></highlight><highlight class="keyword">False</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:<sp/>Trigger<sp/>Face<sp/>Recognition<sp/>only<sp/>on<sp/>service<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_recognize_face<sp/>=<sp/>false</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>start_recognize_face:</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_new_thread(recognize_face,<sp/>(<ref refid="namespaceface__detection_1ad092251552201bffe5b0a9c03cfadb84" kindref="member">align_face_mtcnn</ref>(</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>img,<sp/>total_boxes[<ref refid="namespaceface__detection_1ab5d79d07ad6fb04cfa99e9cb3672c80a" kindref="member">get_closest_face</ref>(total_boxes)]),<sp/>session,</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clf,<sp/>))</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>TODO:</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>create<sp/>ros<sp/>service<sp/>returning<sp/>face_nearby</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#<sp/>-<sp/>create<sp/>ros<sp/>service<sp/>calling<sp/>recognize_face(face_img,<sp/>session,<sp/>classifier)<sp/>and<sp/>returning<sp/>classification<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#Show<sp/>detection<sp/>result</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw<sp/>=<sp/><ref refid="namespaceface__detection_1ad86d2091fa67bdc2816dc397a3754df1" kindref="member">draw_rects</ref>(c.copy(),<sp/>total_boxes,<sp/>resize_factor)</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>draw<sp/>=<sp/><ref refid="namespaceface__detection_1a00df40f5cff2df790be52b45de27fb62" kindref="member">draw_landmarks</ref>(draw,<sp/>points,<sp/>resize_factor)</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv2.imshow(</highlight><highlight class="stringliteral">&quot;detection<sp/>result&quot;</highlight><highlight class="normal">,<sp/>draw)</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">#WAIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv2.waitKey(10)</highlight></codeline>
    </programlisting>
    <location file="/home/ubuntu/workspace/roboy_vision/src/vision_service/scripts/face_detection.py"/>
  </compounddef>
</doxygen>
