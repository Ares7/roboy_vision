<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="classsl_1_1_matrix3f" kind="class" language="C++" prot="public">
    <compoundname>sl::Matrix3f</compoundname>
    <derivedcompoundref refid="classsl_1_1_rotation" prot="public" virt="non-virtual">sl::Rotation</derivedcompoundref>
    <includes refid="types_8hpp" local="no">types.hpp</includes>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classsl_1_1_matrix3f_1a55133049767de3510972d0a83a705255" prot="public" static="yes" mutable="no">
        <type>const int</type>
        <definition>const int sl::Matrix3f::nbElem</definition>
        <argsstring></argsstring>
        <name>nbElem</name>
        <initializer>= 9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1077" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" bodystart="1077" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classsl_1_1_matrix3f_1a51d197669454532c501b85380ce26a01" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float sl::Matrix3f::r00</definition>
        <argsstring></argsstring>
        <name>r00</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1081" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" bodystart="1081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsl_1_1_matrix3f_1a0c4228aef392b5302a260c9608a0cf91" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float sl::Matrix3f::r01</definition>
        <argsstring></argsstring>
        <name>r01</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1081" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" bodystart="1081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsl_1_1_matrix3f_1aa28be99414e398582dcb4c21806b850f" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float sl::Matrix3f::r02</definition>
        <argsstring></argsstring>
        <name>r02</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1081" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" bodystart="1081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsl_1_1_matrix3f_1aca586f8f16f2d23731be8afe11d7276a" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float sl::Matrix3f::r10</definition>
        <argsstring></argsstring>
        <name>r10</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1081" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" bodystart="1081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsl_1_1_matrix3f_1a101929f1dc586707f8563d7dcbba8ea3" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float sl::Matrix3f::r11</definition>
        <argsstring></argsstring>
        <name>r11</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1081" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" bodystart="1081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsl_1_1_matrix3f_1ae40156eccdea9d12d1bf8df778480e94" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float sl::Matrix3f::r12</definition>
        <argsstring></argsstring>
        <name>r12</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1081" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" bodystart="1081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsl_1_1_matrix3f_1ab52501d4836b09db4eca3638429bc02b" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float sl::Matrix3f::r20</definition>
        <argsstring></argsstring>
        <name>r20</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1081" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" bodystart="1081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsl_1_1_matrix3f_1a67ca56b406c855c40fb1ada642f134ec" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float sl::Matrix3f::r21</definition>
        <argsstring></argsstring>
        <name>r21</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1081" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" bodystart="1081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsl_1_1_matrix3f_1a59d199fe8de927a1ed71b99dfe6712b4" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float sl::Matrix3f::r22</definition>
        <argsstring></argsstring>
        <name>r22</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1081" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" bodystart="1081" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsl_1_1_matrix3f_1a719d6e76c71269228db894ac4e8f02b0" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float sl::Matrix3f::r[nbElem]</definition>
        <argsstring>[nbElem]</argsstring>
        <name>r</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1084" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" bodystart="1084" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classsl_1_1_matrix3f_1a5a10d7f9214c48700b6e6b4158904469" prot="public" static="no" mutable="no">
        <type>union sl::Matrix3f::@1</type>
        <definition>union sl::Matrix3f::@1 sl::Matrix3f::@2</definition>
        <argsstring></argsstring>
        <name>@2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1085" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="classsl_1_1_matrix3f_1afba1a1e4201e2609b3bd0714a35a9a30" prot="public" static="no" mutable="no">
        <type>sl::String</type>
        <definition>sl::String sl::Matrix3f::matrix_name</definition>
        <argsstring></argsstring>
        <name>matrix_name</name>
        <briefdescription>
<para>Name of the matrix (optional). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1186" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" bodystart="1186" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classsl_1_1_matrix3f_1aa76440cded2a008340cf634ec77435de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sl::Matrix3f::Matrix3f</definition>
        <argsstring>()</argsstring>
        <name>Matrix3f</name>
        <briefdescription>
<para><ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> default constructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1090" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1aaf7d68d0fa3713ca102379520c5019ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sl::Matrix3f::Matrix3f</definition>
        <argsstring>(float data[])</argsstring>
        <name>Matrix3f</name>
        <param>
          <type>float</type>
          <declname>data</declname>
          <array>[]</array>
        </param>
        <briefdescription>
<para><ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> copy constructor (deep copy). </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1095" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1a7eeb802f4aaeee4236ec424387310320" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>sl::Matrix3f::Matrix3f</definition>
        <argsstring>(const Matrix3f &amp;mat)</argsstring>
        <name>Matrix3f</name>
        <param>
          <type>const <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>brief <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> copy constructor (deep copy). <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>: the <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1a6e69d1c14a4efcc1cdf86da1f860c736" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref></type>
        <definition>Matrix3f sl::Matrix3f::operator*</definition>
        <argsstring>(const Matrix3f &amp;mat) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>brief Gives the result of the multiplication between two <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1af4a6e448942a257cea3102b5dbd17948" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref></type>
        <definition>Matrix3f sl::Matrix3f::operator*</definition>
        <argsstring>(const double &amp;scalar) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const double &amp;</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>brief Gives the result of the multiplication between a <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> and a scalar. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1ae567ff601b39076196fe98d530f8cd3e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sl::Matrix3f::operator==</definition>
        <argsstring>(const Matrix3f &amp;mat) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>brief Test two <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> equality. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1a5d422408928dbc0ef383a213a5242f0e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool sl::Matrix3f::operator!=</definition>
        <argsstring>(const Matrix3f &amp;mat) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>brief Test two <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> inequality. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1121" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1a439737a2196c1bd186fc013cfc95db09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float &amp;</type>
        <definition>float&amp; sl::Matrix3f::operator()</definition>
        <argsstring>(int u, int v)</argsstring>
        <name>operator()</name>
        <param>
          <type>int</type>
          <declname>u</declname>
        </param>
        <param>
          <type>int</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>Gets access to a specific point in the <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> (read / write). </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>u</parametername>
</parameternamelist>
<parameterdescription>
<para>: specify the row </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>: specify the column </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The value at the u, v coordinates. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1aacf4c62165a45f984ea08566bde9e7e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sl::Matrix3f::inverse</definition>
        <argsstring>()</argsstring>
        <name>inverse</name>
        <briefdescription>
<para>Sets the <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> to its inverse. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1af58a3f67901c5ebbd2369f63e4e06063" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sl::Matrix3f::transpose</definition>
        <argsstring>()</argsstring>
        <name>transpose</name>
        <briefdescription>
<para>Sets the RotationArray to its transpose. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1a99083216181f3891f24e02c4474af287" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sl::Matrix3f::setIdentity</definition>
        <argsstring>()</argsstring>
        <name>setIdentity</name>
        <briefdescription>
<para>Sets the <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> to identity. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1af6091748c537145a7c07234661585361" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void sl::Matrix3f::setZeros</definition>
        <argsstring>()</argsstring>
        <name>setZeros</name>
        <briefdescription>
<para>Sets the <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> to zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1a163078c9be084d82241e57cc12409ae6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>sl::String</type>
        <definition>sl::String sl::Matrix3f::getInfos</definition>
        <argsstring>()</argsstring>
        <name>getInfos</name>
        <briefdescription>
<para>Return the components of the <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> in a sl::String. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A sl::String containing the components of the current Matix3f. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1181" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classsl_1_1_matrix3f_1a5b5a87ca86bd0b4110bd58032635d8a7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref></type>
        <definition>static Matrix3f sl::Matrix3f::inverse</definition>
        <argsstring>(const Matrix3f &amp;rotation)</argsstring>
        <name>inverse</name>
        <param>
          <type>const <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Returns the inverse of a <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>: the <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> to compute the inverse from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The inverse of the given <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1141" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1a2ed783c76236ffe90941633115f69e12" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref></type>
        <definition>static Matrix3f sl::Matrix3f::transpose</definition>
        <argsstring>(const Matrix3f &amp;rotation)</argsstring>
        <name>transpose</name>
        <param>
          <type>const <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> &amp;</type>
          <declname>rotation</declname>
        </param>
        <briefdescription>
<para>Returns the transpose of a <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rotation</parametername>
</parameternamelist>
<parameterdescription>
<para>: the <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> to compute the transpose from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The transpose of the given <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1a64df389d715cceeaf6277e9dc53c70bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref></type>
        <definition>static Matrix3f sl::Matrix3f::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
<para>Creates an identity <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> set to identity. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classsl_1_1_matrix3f_1a8c010d69445b994df884dd27113ac1e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref></type>
        <definition>static Matrix3f sl::Matrix3f::zeros</definition>
        <argsstring>()</argsstring>
        <name>zeros</name>
        <briefdescription>
<para>Creates a <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> filled with zeros. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> set to zero. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1175" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>The class <ref refid="classsl_1_1_matrix3f" kindref="compound">Matrix3f</ref> represent a generic three-dimensional matrix. </para>    </briefdescription>
    <detaileddescription>
<para><linebreak/>
<linebreak/>
 <ref refid="classsl_1_1_matrix3f" kindref="compound">sl::Matrix3f</ref> is defined in a row-major order: <linebreak/>
 - It means that, in the value buffer, the entire first row is stored first, followed by the entire second row, and so on. <linebreak/>
 - you can access the data with the &apos;r&apos; ptr or by element name as : r00, r01, r02 | 0 1 2 | r10, r11, r12 &lt;-&gt; r| 3 4 5 | r20, r21, r21 | 6 7 8 | </para>    </detaileddescription>
    <inheritancegraph>
      <node id="282">
        <label>sl::Matrix3f</label>
        <link refid="classsl_1_1_matrix3f"/>
      </node>
      <node id="283">
        <label>sl::Rotation</label>
        <link refid="classsl_1_1_rotation"/>
        <childnode refid="282" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" line="1075" column="1" bodyfile="/home/ubuntu/workspace/roboy_vision/src/zed/sl/types.hpp" bodystart="1075" bodyend="1187"/>
    <listofallmembers>
      <member refid="classsl_1_1_matrix3f_1a163078c9be084d82241e57cc12409ae6" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>getInfos</name></member>
      <member refid="classsl_1_1_matrix3f_1a64df389d715cceeaf6277e9dc53c70bb" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>identity</name></member>
      <member refid="classsl_1_1_matrix3f_1aacf4c62165a45f984ea08566bde9e7e3" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>inverse</name></member>
      <member refid="classsl_1_1_matrix3f_1a5b5a87ca86bd0b4110bd58032635d8a7" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>inverse</name></member>
      <member refid="classsl_1_1_matrix3f_1aa76440cded2a008340cf634ec77435de" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>Matrix3f</name></member>
      <member refid="classsl_1_1_matrix3f_1aaf7d68d0fa3713ca102379520c5019ce" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>Matrix3f</name></member>
      <member refid="classsl_1_1_matrix3f_1a7eeb802f4aaeee4236ec424387310320" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>Matrix3f</name></member>
      <member refid="classsl_1_1_matrix3f_1afba1a1e4201e2609b3bd0714a35a9a30" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>matrix_name</name></member>
      <member refid="classsl_1_1_matrix3f_1a55133049767de3510972d0a83a705255" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>nbElem</name></member>
      <member refid="classsl_1_1_matrix3f_1a5d422408928dbc0ef383a213a5242f0e" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>operator!=</name></member>
      <member refid="classsl_1_1_matrix3f_1a439737a2196c1bd186fc013cfc95db09" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>operator()</name></member>
      <member refid="classsl_1_1_matrix3f_1a6e69d1c14a4efcc1cdf86da1f860c736" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>operator*</name></member>
      <member refid="classsl_1_1_matrix3f_1af4a6e448942a257cea3102b5dbd17948" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>operator*</name></member>
      <member refid="classsl_1_1_matrix3f_1ae567ff601b39076196fe98d530f8cd3e" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>operator==</name></member>
      <member refid="classsl_1_1_matrix3f_1a719d6e76c71269228db894ac4e8f02b0" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>r</name></member>
      <member refid="classsl_1_1_matrix3f_1a51d197669454532c501b85380ce26a01" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>r00</name></member>
      <member refid="classsl_1_1_matrix3f_1a0c4228aef392b5302a260c9608a0cf91" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>r01</name></member>
      <member refid="classsl_1_1_matrix3f_1aa28be99414e398582dcb4c21806b850f" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>r02</name></member>
      <member refid="classsl_1_1_matrix3f_1aca586f8f16f2d23731be8afe11d7276a" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>r10</name></member>
      <member refid="classsl_1_1_matrix3f_1a101929f1dc586707f8563d7dcbba8ea3" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>r11</name></member>
      <member refid="classsl_1_1_matrix3f_1ae40156eccdea9d12d1bf8df778480e94" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>r12</name></member>
      <member refid="classsl_1_1_matrix3f_1ab52501d4836b09db4eca3638429bc02b" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>r20</name></member>
      <member refid="classsl_1_1_matrix3f_1a67ca56b406c855c40fb1ada642f134ec" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>r21</name></member>
      <member refid="classsl_1_1_matrix3f_1a59d199fe8de927a1ed71b99dfe6712b4" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>r22</name></member>
      <member refid="classsl_1_1_matrix3f_1a99083216181f3891f24e02c4474af287" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>setIdentity</name></member>
      <member refid="classsl_1_1_matrix3f_1af6091748c537145a7c07234661585361" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>setZeros</name></member>
      <member refid="classsl_1_1_matrix3f_1af58a3f67901c5ebbd2369f63e4e06063" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>transpose</name></member>
      <member refid="classsl_1_1_matrix3f_1a2ed783c76236ffe90941633115f69e12" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>transpose</name></member>
      <member refid="classsl_1_1_matrix3f_1a8c010d69445b994df884dd27113ac1e7" prot="public" virt="non-virtual"><scope>sl::Matrix3f</scope><name>zeros</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
